From 3786f5de03526d3e094c615864257d7ccdb7421e Mon Sep 17 00:00:00 2001
From: David Drysdale <drysdale@google.com>
Date: Wed, 18 May 2016 13:27:44 +0100
Subject: [PATCH] Add command line option to disable CAB checks

---
 checks.c   |  2 +-
 checks.h   |  2 ++
 x509lint.c | 30 +++++++++++++++++++++++++-----
 3 files changed, 28 insertions(+), 6 deletions(-)

diff --git a/checks.c b/checks.c
index f4203d4..8d871bc 100644
--- a/checks.c
+++ b/checks.c
@@ -38,7 +38,6 @@
 #include "checks.h"
 #include "asn1_time.h"
 
-static bool cab_checks = true;
 static iconv_t iconv_utf8;
 static iconv_t iconv_ucs2;
 static iconv_t iconv_t61;
@@ -80,6 +79,7 @@ static ASN1_OBJECT *obj_pkcs9_emailAddress;
 static ASN1_OBJECT *obj_postOfficeBox;
 static ASN1_OBJECT *obj_anyEKU;
 
+bool cab_checks = true;
 uint32_t errors[3];
 uint32_t warnings[1];
 uint32_t info[1];
diff --git a/checks.h b/checks.h
index 47d9e34..b57fc13 100644
--- a/checks.h
+++ b/checks.h
@@ -1,6 +1,7 @@
 #ifndef _CHECKS_H_
 #define _CHECKS_H_
 
+#include <stdbool.h>
 #include <stdint.h>
 
 typedef enum { SubscriberCertificate, IntermediateCA, RootCA } CertType;
@@ -105,6 +106,7 @@ typedef enum { PEM, DER } CertFormat;
 #define INF_UNKNOWN_VALIDATION            3        /* Software doesn't know OID yet. */
 #define INF_NAME_ENTRY_LENGTH_NOT_CHECKED 4        /* Software doesn't hnow how to check size yet. */
 
+extern bool cab_checks;
 extern uint32_t errors[];
 extern uint32_t warnings[];
 extern uint32_t info[];
diff --git a/x509lint.c b/x509lint.c
index c65ecf0..f1fec10 100644
--- a/x509lint.c
+++ b/x509lint.c
@@ -20,8 +20,10 @@
  * IN THE SOFTWARE.
  */
 
+#include <getopt.h>
 #include <stdlib.h>
 #include <stdio.h>
+
 #include "checks.h"
 #include "messages.h"
 
@@ -65,25 +67,43 @@ static int LoadCert(const char *filename, unsigned char **buffer, size_t *buflen
 }
 
 
+static void PrintUsage()
+{
+	printf("Usage: x509lint [options] file\n");
+	printf("  -c : Skip CAB forum checks\n");
+	exit(1);
+}
+
 int main(int argc, char *argv[])
 {
 	unsigned char *buffer;
 	size_t buflen;
+	int opt;
 
-	if (argc != 2)
+	while ((opt = getopt(argc, argv, "hc")) != -1) {
+		switch (opt) {
+		case 'c':
+			cab_checks = false;
+			break;
+		case 'h':
+		default: /* '?' */
+			PrintUsage();
+		}
+	}
+
+	if (optind >= argc)
 	{
-		printf("Usage: x509lint file\n");
-		exit(1);
+		PrintUsage();
 	}
 
-	if (LoadCert(argv[1], &buffer, &buflen) != 0)
+	if (LoadCert(argv[optind], &buffer, &buflen) != 0)
 	{
 		fprintf(stderr, "Unable to read certificate\n");
 		exit(1);
 	}
 
 	check_init();
-	
+
 	check(buffer, buflen, PEM, SubscriberCertificate);
 
 	char *m = get_messages();
-- 
1.9.1

